package com.heaptrip.geoexporter;

import org.supercsv.cellprocessor.Optional;
import org.supercsv.cellprocessor.ift.CellProcessor;

public class Processor {
	
	private Processor() {
	}
	
	public static CellProcessor[] getCellProcessors() {
        
        final CellProcessor[] processors = new CellProcessor[] { 
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional(),
        		new Optional()
        };
        
        return processors;
	}

}
